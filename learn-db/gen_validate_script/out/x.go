package main

//
// DO NOT EDIT THIS FILE
// This file is automatically generated from the Makefile
//
// make ValidateTables.go
//
// or:
//
// make gen
//

import (
	"fmt"
	"os"

	"gitlab.com/pschlump/PureImaginationServer/ymux"
)

// ValidateTablesDDL is the fuction that is called to validate the tables and stored procedures.
// it returns a list of tables that validated.
func ValidateTablesDDL(exitOnError ...bool) (good, bad []string) {
	var err error

	// Table: t_output
	/* {
		"created": true,
		"msg": true,
		"output": true,
		"seq": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "t_output",
		Columns: []ymux.PGColumn{
			{ColumnName: "seq"},
			{ColumnName: "msg"},
			{ColumnName: "output"},
			{ColumnName: "created"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "t_output")
	} else {
		good = append(good, "t_output")
	}

	// Table: t_ymux_2fa
	/* {
		"created": true,
		"device_desc": true,
		"id": true,
		"last_used": true,
		"updated": true,
		"user_hash": true,
		"user_id": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "t_ymux_2fa",
		Columns: []ymux.PGColumn{
			{ColumnName: "last_used"},
			{ColumnName: "updated"},
			{ColumnName: "created"},
			{ColumnName: "id"},
			{ColumnName: "user_id"},
			{ColumnName: "user_hash"},
			{ColumnName: "device_desc"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "t_ymux_2fa")
	} else {
		good = append(good, "t_ymux_2fa")
	}

	// Table: t_ymux_2fa_dev_otk
	/* {
		"created": true,
		"id": true,
		"one_time_key": true,
		"updated": true,
		"user_id": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "t_ymux_2fa_dev_otk",
		Columns: []ymux.PGColumn{
			{ColumnName: "id"},
			{ColumnName: "user_id"},
			{ColumnName: "one_time_key"},
			{ColumnName: "updated"},
			{ColumnName: "created"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "t_ymux_2fa_dev_otk")
	} else {
		good = append(good, "t_ymux_2fa_dev_otk")
	}

	// Table: t_ymux_2fa_otk
	/* {
		"created": true,
		"id": true,
		"one_time_key": true,
		"updated": true,
		"user_id": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "t_ymux_2fa_otk",
		Columns: []ymux.PGColumn{
			{ColumnName: "updated"},
			{ColumnName: "created"},
			{ColumnName: "id"},
			{ColumnName: "user_id"},
			{ColumnName: "one_time_key"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "t_ymux_2fa_otk")
	} else {
		good = append(good, "t_ymux_2fa_otk")
	}

	// Table: t_ymux_auth_token
	/* {
		"created": true,
		"id": true,
		"updated": true,
		"user_id": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "t_ymux_auth_token",
		Columns: []ymux.PGColumn{
			{ColumnName: "id"},
			{ColumnName: "user_id"},
			{ColumnName: "updated"},
			{ColumnName: "created"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "t_ymux_auth_token")
	} else {
		good = append(good, "t_ymux_auth_token")
	}

	// Table: t_ymux_config
	/* {
		"b_value": true,
		"created": true,
		"i_value": true,
		"id": true,
		"name": true,
		"ty": true,
		"updated": true,
		"value": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "t_ymux_config",
		Columns: []ymux.PGColumn{
			{ColumnName: "b_value"},
			{ColumnName: "updated"},
			{ColumnName: "created"},
			{ColumnName: "id"},
			{ColumnName: "name"},
			{ColumnName: "ty"},
			{ColumnName: "value"},
			{ColumnName: "i_value"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "t_ymux_config")
	} else {
		good = append(good, "t_ymux_config")
	}

	// Table: t_ymux_documents
	/* {
		"blockerr": true,
		"blockhash": true,
		"blockno": true,
		"created": true,
		"document_file_name": true,
		"document_hash": true,
		"ethstatus": true,
		"file_name": true,
		"hash": true,
		"id": true,
		"note": true,
		"orig_file_extension": true,
		"orig_file_name": true,
		"signature": true,
		"txid": true,
		"updated": true,
		"url_file_name": true,
		"user_id": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "t_ymux_documents",
		Columns: []ymux.PGColumn{
			{ColumnName: "document_hash"},
			{ColumnName: "document_file_name"},
			{ColumnName: "signature"},
			{ColumnName: "txid"},
			{ColumnName: "created"},
			{ColumnName: "id"},
			{ColumnName: "hash"},
			{ColumnName: "ethstatus"},
			{ColumnName: "blockno"},
			{ColumnName: "updated"},
			{ColumnName: "file_name"},
			{ColumnName: "orig_file_extension"},
			{ColumnName: "blockhash"},
			{ColumnName: "user_id"},
			{ColumnName: "orig_file_name"},
			{ColumnName: "url_file_name"},
			{ColumnName: "blockerr"},
			{ColumnName: "note"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "t_ymux_documents")
	} else {
		good = append(good, "t_ymux_documents")
	}

	// Table: t_ymux_origin_ok
	/* {
		"origin": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "t_ymux_origin_ok",
		Columns: []ymux.PGColumn{
			{ColumnName: "origin"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "t_ymux_origin_ok")
	} else {
		good = append(good, "t_ymux_origin_ok")
	}

	// Table: t_ymux_priv
	/* {
		"created": true,
		"desc": true,
		"id": true,
		"priv_name": true,
		"updated": true,
		"visible": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "t_ymux_priv",
		Columns: []ymux.PGColumn{
			{ColumnName: "id"},
			{ColumnName: "priv_name"},
			{ColumnName: "desc"},
			{ColumnName: "visible"},
			{ColumnName: "updated"},
			{ColumnName: "created"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "t_ymux_priv")
	} else {
		good = append(good, "t_ymux_priv")
	}

	// Table: t_ymux_registration_token
	/* {
		"created": true,
		"id": true,
		"token": true,
		"updated": true,
		"user_id": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "t_ymux_registration_token",
		Columns: []ymux.PGColumn{
			{ColumnName: "id"},
			{ColumnName: "user_id"},
			{ColumnName: "token"},
			{ColumnName: "updated"},
			{ColumnName: "created"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "t_ymux_registration_token")
	} else {
		good = append(good, "t_ymux_registration_token")
	}

	// Table: t_ymux_role
	/* {
		"created": true,
		"id": true,
		"is_template": true,
		"role_name": true,
		"updated": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "t_ymux_role",
		Columns: []ymux.PGColumn{
			{ColumnName: "id"},
			{ColumnName: "role_name"},
			{ColumnName: "is_template"},
			{ColumnName: "updated"},
			{ColumnName: "created"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "t_ymux_role")
	} else {
		good = append(good, "t_ymux_role")
	}

	// Table: t_ymux_role_priv
	/* {
		"created": true,
		"id": true,
		"priv_id": true,
		"role_id": true,
		"updated": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "t_ymux_role_priv",
		Columns: []ymux.PGColumn{
			{ColumnName: "id"},
			{ColumnName: "role_id"},
			{ColumnName: "priv_id"},
			{ColumnName: "updated"},
			{ColumnName: "created"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "t_ymux_role_priv")
	} else {
		good = append(good, "t_ymux_role_priv")
	}

	// Table: t_ymux_user
	/* {
		"acct_expire": true,
		"acct_type": true,
		"auth_token": true,
		"config": true,
		"created": true,
		"default_image": true,
		"default_title": true,
		"email": true,
		"email_confirmed": true,
		"id": true,
		"org_user_id": true,
		"parent_user_id": true,
		"password": true,
		"real_name": true,
		"realm": true,
		"recovery_expire": true,
		"recovery_token": true,
		"rfc_6238_secret": true,
		"roles_privs": true,
		"salt": true,
		"setup_2fa_complete": true,
		"setup_2fa_token": true,
		"updated": true,
		"user_role": true,
		"userinfo": true,
		"username": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "t_ymux_user",
		Columns: []ymux.PGColumn{
			{ColumnName: "setup_2fa_complete"},
			{ColumnName: "rfc_6238_secret"},
			{ColumnName: "recovery_expire"},
			{ColumnName: "setup_2fa_token"},
			{ColumnName: "default_image"},
			{ColumnName: "user_role"},
			{ColumnName: "real_name"},
			{ColumnName: "email"},
			{ColumnName: "parent_user_id"},
			{ColumnName: "auth_token"},
			{ColumnName: "config"},
			{ColumnName: "acct_type"},
			{ColumnName: "default_title"},
			{ColumnName: "roles_privs"},
			{ColumnName: "org_user_id"},
			{ColumnName: "username"},
			{ColumnName: "recovery_token"},
			{ColumnName: "salt"},
			{ColumnName: "created"},
			{ColumnName: "id"},
			{ColumnName: "realm"},
			{ColumnName: "userinfo"},
			{ColumnName: "acct_expire"},
			{ColumnName: "updated"},
			{ColumnName: "password"},
			{ColumnName: "email_confirmed"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "t_ymux_user")
	} else {
		good = append(good, "t_ymux_user")
	}

	// Table: t_ymux_user_log
	/* {
		"activity_name": true,
		"created": true,
		"id": true,
		"updated": true,
		"user_id": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "t_ymux_user_log",
		Columns: []ymux.PGColumn{
			{ColumnName: "id"},
			{ColumnName: "user_id"},
			{ColumnName: "activity_name"},
			{ColumnName: "updated"},
			{ColumnName: "created"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "t_ymux_user_log")
	} else {
		good = append(good, "t_ymux_user_log")
	}

	// Table: ct_lesson
	/* {
		"created": true,
		"img_url": true,
		"lang_to_use": true,
		"lesson": true,
		"lesson_id": true,
		"lesson_name": true,
		"updated": true,
		"url": true,
		"video_raw_file": true,
		"video_title": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "ct_lesson",
		Columns: []ymux.PGColumn{
			{ColumnName: "lang_to_use"},
			{ColumnName: "video_title"},
			{ColumnName: "url"},
			{ColumnName: "lesson_name"},
			{ColumnName: "lesson"},
			{ColumnName: "updated"},
			{ColumnName: "created"},
			{ColumnName: "lesson_id"},
			{ColumnName: "video_raw_file"},
			{ColumnName: "img_url"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "ct_lesson")
	} else {
		good = append(good, "ct_lesson")
	}

	// Table: ct_login
	/* {
		"class_no": true,
		"lang_to_use": true,
		"misc": true,
		"pg_acct": true,
		"user_id": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "ct_login",
		Columns: []ymux.PGColumn{
			{ColumnName: "user_id"},
			{ColumnName: "pg_acct"},
			{ColumnName: "class_no"},
			{ColumnName: "lang_to_use"},
			{ColumnName: "misc"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "ct_login")
	} else {
		good = append(good, "ct_login")
	}

	// Table: ct_lesson_seen
	/* {
		"created": true,
		"id": true,
		"lesson_id": true,
		"updated": true,
		"user_id": true,
		"watch_count": true,
		"when_seen": true,
		"when_start": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "ct_lesson_seen",
		Columns: []ymux.PGColumn{
			{ColumnName: "when_seen"},
			{ColumnName: "watch_count"},
			{ColumnName: "when_start"},
			{ColumnName: "updated"},
			{ColumnName: "created"},
			{ColumnName: "id"},
			{ColumnName: "user_id"},
			{ColumnName: "lesson_id"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "ct_lesson_seen")
	} else {
		good = append(good, "ct_lesson_seen")
	}

	// Table: ct_homework_grade
	/* {
		"created": true,
		"lesson_id": true,
		"pass": true,
		"tries": true,
		"updated": true,
		"user_id": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "ct_homework_grade",
		Columns: []ymux.PGColumn{
			{ColumnName: "tries"},
			{ColumnName: "pass"},
			{ColumnName: "updated"},
			{ColumnName: "created"},
			{ColumnName: "user_id"},
			{ColumnName: "lesson_id"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "ct_homework_grade")
	} else {
		good = append(good, "ct_homework_grade")
	}

	// Table: ct_homework_list
	/* {
		"code": true,
		"created": true,
		"lesson_id": true,
		"pass": true,
		"updated": true,
		"user_id": true,
		"when_test": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "ct_homework_list",
		Columns: []ymux.PGColumn{
			{ColumnName: "when_test"},
			{ColumnName: "code"},
			{ColumnName: "pass"},
			{ColumnName: "updated"},
			{ColumnName: "created"},
			{ColumnName: "user_id"},
			{ColumnName: "lesson_id"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "ct_homework_list")
	} else {
		good = append(good, "ct_homework_list")
	}

	// Table: ct_lesson_validation
	/* {
		"created": true,
		"id": true,
		"lesson_id": true,
		"qdata": true,
		"seq": true,
		"updated": true
	} */

	err = ymux.PGCheckTableColumns(ymux.PGTable{
		TableName: "ct_lesson_validation",
		Columns: []ymux.PGColumn{
			{ColumnName: "updated"},
			{ColumnName: "created"},
			{ColumnName: "id"},
			{ColumnName: "lesson_id"},
			{ColumnName: "seq"},
			{ColumnName: "qdata"},
		},
	})
	if err != nil {
		fmt.Fprintf(os.Stderr, "Missing %s - PG not setup correctly.  Table missing column or missing.\n", err)
		bad = append(bad, "ct_lesson_validation")
	} else {
		good = append(good, "ct_lesson_validation")
	}

	if len(exitOnError) > 0 {
		if exitOnError[0] == true {
			if len(bad) > 0 {
				os.Exit(1)
			}
		}
	} else {
		if len(bad) > 0 {
			os.Exit(1)
		}
	}
	return
}
